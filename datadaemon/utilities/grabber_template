# -*- coding: utf-8  -*-
from base import BaseGrabber

Class $grabber_name(BaseGrabber):

    def config(self):
        return {
            "run_period": 0,
            "exchange": None,
            "tradepairs": None,
            "query":{
                "timeframe": None,
                "limit":500,
                "since":None,
                "params":{}
            },
            "dumploc": None,
        }

    async def on_grabber_init(self):
        pass

    async def on_task_start(self):
        pass

    async def before_tradepair_start(self, pair):
        pass

    async def fetch_data_from_exchange(self, pair, since):
        raise NotImplemented

    async def on_query_succeed(self, pair, data):
        pass

    def parseData(self, pair, data):
        pass

    def on_tradepair_done(self, pair):
        pass

    def on_task_done(self):
        pass

    async def on_grabber_failure(self, error):
        pass

    async def on_grabber_quit(self):
        pass


    # Default we use delay-retry for handle_exception(), overwrite it if necessary.
    """
    async def handle_exception(self, e, pair, current_chunk_id):
        pass
    """

    async def handle_unexpected_exception(self, e, pair, current_chunk_id):
        pass

EXPORT = $grabber_name